{
  "ast": null,
  "code": "'use strict';\n\nvar extractTldFromHost = require('./from-host.js');\n/**\n * Checks if the TLD exists for a given hostname\n *\n * @api\n * @param {string} rules\n * @param {string} hostname\n * @return {boolean}\n */\n\n\nmodule.exports = function tldExists(rules, hostname) {\n  // Easy case, it's a TLD\n  if (rules.hasTld(hostname)) {\n    return true;\n  } // Popping only the TLD of the hostname\n\n\n  var hostTld = extractTldFromHost(hostname);\n\n  if (hostTld === null) {\n    return false;\n  }\n\n  return rules.hasTld(hostTld);\n};",
  "map": {
    "version": 3,
    "names": [
      "extractTldFromHost",
      "require",
      "module",
      "exports",
      "tldExists",
      "rules",
      "hostname",
      "hasTld",
      "hostTld"
    ],
    "sources": [
      "/Users/danielleflinn/Documents/GitHub/clients/node_modules/tldjs/lib/tld-exists.js"
    ],
    "sourcesContent": [
      "'use strict';\n\n\nvar extractTldFromHost = require('./from-host.js');\n\n\n/**\n * Checks if the TLD exists for a given hostname\n *\n * @api\n * @param {string} rules\n * @param {string} hostname\n * @return {boolean}\n */\nmodule.exports = function tldExists(rules, hostname) {\n  // Easy case, it's a TLD\n  if (rules.hasTld(hostname)) {\n    return true;\n  }\n\n  // Popping only the TLD of the hostname\n  var hostTld = extractTldFromHost(hostname);\n  if (hostTld === null) {\n    return false;\n  }\n\n  return rules.hasTld(hostTld);\n};\n"
    ],
    "mappings": "AAAA;;AAGA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,gBAAD,CAAhC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAoC;EACnD;EACA,IAAID,KAAK,CAACE,MAAN,CAAaD,QAAb,CAAJ,EAA4B;IAC1B,OAAO,IAAP;EACD,CAJkD,CAMnD;;;EACA,IAAIE,OAAO,GAAGR,kBAAkB,CAACM,QAAD,CAAhC;;EACA,IAAIE,OAAO,KAAK,IAAhB,EAAsB;IACpB,OAAO,KAAP;EACD;;EAED,OAAOH,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAP;AACD,CAbD"
  },
  "metadata": {},
  "sourceType": "script"
}
